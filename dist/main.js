(()=>{"use strict";const e=[];let t=0;const n=e=>({name:e,index:t,todoIndex:0,list:[]}),d=(e,t,n,d)=>({title:e,description:t,dueDate:n,project:d,index:0,complete:!1}),o=(t,n)=>{let d=e[n.index];d.list.push(t),t.index=d.todoIndex,d.todoIndex++},i=n=>{e.push(n),t++};let l=n("Default");i(l);let r=d("Create","Create more tasks","tomorrow",l);o(r,l);let a=d("Creat2","Create more tasks","tomorrow",l);o(a,l);let c=d("Creat3","Create more tasks","tomorrow",l);o(c,l);let s=n("project2");i(s);let m=d("Creat3","Create more tasks","tomorrow",l);o(m,s);let p=e[0],u=!1,C=!1;const h=document.getElementById("content"),E=document.createElement("div");E.id="side-bar";const v=document.createElement("div");v.id="todo-bar";const f=document.createElement("div");f.id="done-bar";const b=()=>{const t=document.createElement("p");t.id="side-title",t.textContent="Too Much To Do",E.appendChild(t);const n=document.createElement("div");e.forEach((e=>{let t=document.createElement("div");e==p&&(t.style.color="red"),t.setAttribute("class","project-links"),t.addEventListener("click",(()=>{p=e,x(),k()})),t.textContent=e.name,n.appendChild(t)})),E.appendChild(n);const d=document.createElement("button");d.id="new-project-button",d.textContent="+",d.addEventListener("click",I),E.appendChild(d)};function x(){for(;v.firstChild;)v.removeChild(v.firstChild);y()}function k(){for(;E.firstChild;)E.removeChild(E.firstChild);b()}function y(){const e=document.createElement("div");e.id="todo-top-div";const t=document.createElement("h3");t.textContent="To Do",e.appendChild(t);const n=document.createElement("button");n.id="new-task-button",n.textContent="+",n.addEventListener("click",w),e.appendChild(n),v.appendChild(e);let d=p.list.slice();d.reverse(),d.forEach((e=>{let t=document.createElement("div");t.setAttribute("class","task-div");let n=document.createElement("p");n.setAttribute("class","task-name"),n.textContent=e.title,t.appendChild(n);let d=document.createElement("p");d.setAttribute("class","task-due-date"),d.textContent=e.dueDate,t.appendChild(d);let o=document.createElement("p");o.setAttribute("class","task-priority"),o.textContent=e.priority,t.appendChild(o),v.appendChild(t)}))}function w(){if(u){let e=document.getElementById("new-task-div");v.removeChild(e)}u=!0;let e="",t="",n=document.createElement("div");n.setAttribute("class","task-div"),n.id="new-task-div";let i=document.createElement("form"),l=document.createElement("input");l.type="text",l.required=!0,l.setAttribute("placeholder","Enter Task Name"),i.appendChild(l);let r=document.createElement("input");r.type="date",i.appendChild(r);let a=document.createElement("button");a.type="submit",a.textContent="Create",i.appendChild(a),i.addEventListener("submit",(n=>{n.preventDefault(),e=l.value,t=r.value;let i=d(e,"",t,p);o(i,p),u=!1,x()})),n.appendChild(i);let c=document.getElementById("todo-top-div");v.insertBefore(n,c.nextSibling)}function I(){if(C){let e=document.getElementById("new-proj-div");E.removeChild(e)}C=!0;let e=document.createElement("div");e.id="new-proj-div";let t=document.createElement("form"),d=document.createElement("input");d.type="text",d.style.width="100px",d.required=!0,t.appendChild(d),t.addEventListener("submit",(e=>{e.preventDefault();let t=d.value,o=n(t);i(o),C=!1,k()})),e.appendChild(t);let o=document.getElementById("new-project-button");E.insertBefore(e,o)}h.appendChild(E),h.appendChild(v),h.appendChild(f),b(),y()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,